---
- name: Simple Haproxy Docker Setup.
  hosts: local
  gather_facts: true
  become: true
  roles:
    - role: "../ansible-haproxy"
  vars:
    haproxy_mode: "docker"
    haproxy_docker_build: true
    haproxy_docker_compose: true
    haproxy_helper_scripts_enabled: true
    haproxy_validation_command: "/bin/true %s"
    haproxy_global_vars:
      - "log stdout local0 debug"
      - "ssl-default-bind-ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384:DHE-RSA-CHACHA20-POLY1305"
      - "ssl-default-bind-ciphersuites TLS_AES_128_GCM_SHA256:TLS_AES_256_GCM_SHA384:TLS_CHACHA20_POLY1305_SHA256"
      - "ssl-default-bind-options prefer-client-ciphers no-sslv3 no-tlsv10 no-tlsv11 no-tls-tickets"
      - "ssl-default-server-ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384:DHE-RSA-CHACHA20-POLY1305"
      - "ssl-default-server-ciphersuites TLS_AES_128_GCM_SHA256:TLS_AES_256_GCM_SHA384:TLS_CHACHA20_POLY1305_SHA256"
      - "ssl-default-server-options no-sslv3 no-tlsv10 no-tlsv11 no-tls-tickets"
    haproxy_defaults_vars:
      - "option tcplog"
      - "log global"
      - "option dontlognull"
      - "timeout connect 5s"
      - "timeout client 30m"
      - "timeout server 30m"
      - "errorfiles default_error_files"
    haproxy_httperrors_vars:
      - name: "default_error_files"
        vars:
          - "errorfile 400 {{ haproxy_docker_config_dir }}/errors/400.http"
          - "errorfile 403 {{ haproxy_docker_config_dir }}/errors/403.http"
          - "errorfile 408 {{ haproxy_docker_config_dir }}/errors/408.http"
          - "errorfile 500 {{ haproxy_docker_config_dir }}/errors/500.http"
          - "errorfile 502 {{ haproxy_docker_config_dir }}/errors/502.http"
          - "errorfile 503 {{ haproxy_docker_config_dir }}/errors/503.http"
          - "errorfile 504 {{ haproxy_docker_config_dir }}/errors/504.http"
    haproxy_frontend_vars:
      - name: "prometheus"
        vars:
          - "mode http"
          - "bind localhost:{{ haproxy_prometheus_port }}"
          - "http-request use-service prometheus-exporter if { path /metrics }"
          - "stats enable"
          - "stats uri /stats"
          - "stats refresh 10s"
      - name: "http"
        vars:
          - "mode http"
          - "bind *:80"
          - "default_backend web_servers"
    haproxy_backend_vars:
      - name: "web_servers"
        vars:
          - "mode http"
          - "balance leastconn"
          - "server myfirstserver 192.168.1.25:80 check"
          - "server mysecondserver 192.168.1.26:80 check"
          - "server mythirdserver 192.168.1.27:80 check"
    haproxy_listen_vars:
      - name: "ssh_proxy"
        vars:
          - "mode tcp"
          - "bind *:8080"
          - "server server1 192.168.1.25:22 check"
